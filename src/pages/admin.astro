---
import InputForm from "../components/InputForm.astro";
import BaseLayout from "../layouts/BaseLayout.astro";

const pageTitle = "Dashboard";
const state = false;
---

<BaseLayout pageTitle={pageTitle} state={state}>
  <h1
    class="text-center pt-16 pb-8 mb-4 text-4xl text-gray-900 dark:text-white"
  >
    {pageTitle}
  </h1>
  <br />
  <div class="flex justify-center items-start min-h-screen space-x-4">
    <ul
      class="flex flex-col space-y-4 text-sm font-medium text-gray-500 dark:text-gray-400"
    >
      <li>
        <button
          class="tablinks p-4 text-center inline-flex items-center px-4 py-3 rounded-lg hover:text-gray-900 bg-gray-50 hover:bg-gray-100 w-full dark:bg-gray-800 dark:hover:bg-gray-700 dark:hover:text-white"
          data-tab="listCandit"
        >
          Candidatos
        </button>
      </li>
      <li>
        <button
          class="tablinks p-4 text-center inline-flex items-center px-4 py-3 rounded-lg hover:text-gray-900 bg-gray-50 hover:bg-gray-100 w-full dark:bg-gray-800 dark:hover:bg-gray-700 dark:hover:text-white"
          data-tab="seeElections"
        >
          Elecciones
        </button>
      </li>
      <li>
        <button
          class="tablinks p-4 text-center inline-flex items-center px-4 py-3 rounded-lg hover:text-gray-900 bg-gray-50 hover:bg-gray-100 w-full dark:bg-gray-800 dark:hover:bg-gray-700 dark:hover:text-white"
          data-tab="seeList"
        >
          Listas
        </button>
      </li>
      <li>
        <button
          class="tablinks p-4 text-center inline-flex items-center px-4 py-3 rounded-lg hover:text-gray-900 bg-gray-50 hover:bg-gray-100 w-full dark:bg-gray-800 dark:hover:bg-gray-700 dark:hover:text-white"
          data-tab="seeVote"
        >
          Votos
        </button>
      </li>
    </ul>

    <div
      class="p-6 bg-gray-50 text-gray-500 dark:text-gray-400 dark:bg-gray-800 rounded-lg w-3/4"
    >
      <div id="default" class="tabcontent">
        <h3 class="text-lg font-bold text-gray-900 dark:text-white mb-2">
          Profile Tab
        </h3>
        <p class="mb-2">
          This is some placeholder content the Profile tab's associated content.
        </p>
      </div>
      <div
        id="listCandit"
        class="tabcontent hidden relative overflow-x-auto sm:rounded-lg"
      >
        <div class="flex justify-center items-center">
          <div class="inline-flex rounded-md mb-4" role="group">
            <button
              data-modal-target="c-candidate"
              data-modal-toggle="c-candidate"
              type="button"
              class="px-4 py-2 text-sm font-medium text-gray-900 bg-white border border-gray-200 rounded-s-lg rounded-e-lg hover:bg-gray-100 hover:text-blue-700 dark:bg-gray-800 dark:border-gray-700 dark:text-white dark:hover:text-white dark:hover:bg-gray-700 dark:focus:ring-blue-500 dark:focus:text-white"
            >
              Crear
            </button>
          </div>
        </div>
        <div
          id="c-candidate"
          tabindex="-1"
          aria-hidden="true"
          class="hidden overflow-y-auto overflow-x-hidden fixed top-0 right-0 left-0 z-50 justify-center items-center w-full md:inset-0 h-[calc(100%-1rem)] max-h-full"
        >
          <div class="relative p-4 w-full max-w-md max-h-full">
            <div class="relative bg-white rounded-lg shadow dark:bg-gray-700">
              <div
                class="flex items-center justify-between p-4 md:p-5 border-b rounded-t dark:border-gray-600"
              >
                <h3 class="text-lg font-semibold text-gray-900 dark:text-white">
                  Create New Product
                </h3>
                <button
                  type="button"
                  class="text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ms-auto inline-flex justify-center items-center dark:hover:bg-gray-600 dark:hover:text-white"
                  data-modal-toggle="c-candidate"
                  data-modal-target="c-candidate"
                >
                  <svg
                    class="w-3 h-3"
                    aria-hidden="true"
                    xmlns="http://www.w3.org/2000/svg"
                    fill="none"
                    viewBox="0 0 14 14"
                  >
                    <path
                      stroke="currentColor"
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                      d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6"></path>
                  </svg>
                  <span class="sr-only">Close modal</span>
                </button>
              </div>
              <form class="p-4 md:p-5" id="create-candidate">
                <InputForm
                  nameLabel="Nombre"
                  inputType="text"
                  inputId="name"
                  inputPlaceholder="Name"
                />
                <br />
                <InputForm
                  nameLabel="Apellido Paterno"
                  inputType="text"
                  inputId="apaterno"
                  inputPlaceholder="Paternal last name"
                />
                <br />
                <InputForm
                  nameLabel="Apellido Materno"
                  inputType="text"
                  inputId="amaterno"
                  inputPlaceholder="Paternal last name"
                />
                <br />
                <InputForm
                  nameLabel="Lista perteneciente"
                  inputType="number"
                  inputId="listaper"
                  inputPlaceholder="123"
                />
                <br />

                <button
                  type="submit"
                  class="text-white inline-flex items-center bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800"
                >
                  <svg
                    class="me-1 -ms-1 w-5 h-5"
                    fill="currentColor"
                    viewBox="0 0 20 20"
                    xmlns="http://www.w3.org/2000/svg"
                    ><path
                      fill-rule="evenodd"
                      d="M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z"
                      clip-rule="evenodd"></path></svg
                  >
                  Agregar
                </button>
              </form>
            </div>
          </div>
        </div>
        <div class="relative overflow-x-auto shadow-md sm:rounded-lg">
          <table
            class="w-full text-sm text-left rtl:text-right text-gray-500 dark:text-gray-400"
          >
            <thead
              class="text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400"
            >
              <tr>
                <th scope="col" class="px-6 py-3">Nombres</th>
                <th scope="col" class="px-6 py-3">Apellido Paterno</th>
                <th scope="col" class="px-6 py-3">Apellido Materno</th>
                <th scope="col" class="px-6 py-3">Nombre de la Lista</th>
              </tr>
            </thead>
            <tbody id="candidates-table-body">
              <tr>
                <td colspan="4" class="text-center">Cargando datos...</td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>
      <div
        id="seeElections"
        class="tabcontent hidden relative overflow-x-auto shadow-md sm:rounded-lg"
      >
        <table
          class="w-full text-sm text-left rtl:text-right text-gray-500 dark:text-gray-400"
        >
          <thead
            class="text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400"
          >
            <tr>
              <th scope="col" class="px-6 py-3">Fecha</th>
              <th scope="col" class="px-6 py-3">Hora Inicio</th>
              <th scope="col" class="px-6 py-3">Hora Fin</th>
              <th scope="col" class="px-6 py-3">Descripci√≥n</th>
            </tr>
          </thead>
          <tbody id="electios-table-body">
            <tr>
              <td colspan="4" class="text-center">Cargando datos...</td>
            </tr>
          </tbody>
        </table>
      </div>
      <div
        id="seeList"
        class="tabcontent hidden relative overflow-x-auto shadow-md sm:rounded-lg"
      >
        <table
          class="w-full text-sm text-left rtl:text-right text-gray-500 dark:text-gray-400"
        >
          <thead
            class="text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400"
          >
            <tr>
              <th scope="col" class="px-6 py-3">Nombre</th>
              <th scope="col" class="px-6 py-3">Eleccion ID</th>
              <th scope="col" class="px-6 py-3">Propuesta</th>
              <th scope="col" class="px-6 py-3">ID</th>
            </tr>
          </thead>
          <tbody id="list-table-body">
            <tr>
              <td colspan="4" class="text-center">Cargando datos...</td>
            </tr>
          </tbody>
        </table>
      </div>
      <div id="seeVote" class="tabcontent hidden">
        <h1 class="text-gray-100">Ver votos</h1>
      </div>
    </div>
  </div>
  <script>
    document.addEventListener("DOMContentLoaded", () => {
      const toggleButtons = document.querySelectorAll("[data-modal-toggle]");

      toggleButtons.forEach((button) => {
        button.addEventListener("click", () => {
          const modalId = button.getAttribute("data-modal-target");
          const modal = document.getElementById(modalId);

          if (modal) {
            modal.classList.toggle("hidden");
            modal.classList.toggle("flex");
          }
        });
      });
    });
  </script>
  <script src="../scripts/admin.js"></script>
  <script>
    document.addEventListener("DOMContentLoaded", () => {
      const formCreateCandidate = document.getElementById("create-candidate");
      if (formCreateCandidate) {
        formCreateCandidate.addEventListener("submit", async (event) => {
          event.preventDefault();

          console.log("Formulario enviado");

          const form = event.target;
          const name = form.elements.name.value.trim();
          const psurname = form.elements.apaterno.value.trim();
          const msurname = form.elements.amaterno.value.trim();
          const lista = parseInt(form.elements.listaper.value.trim(), 10); // Asegura que sea n√∫mero entero

          const data = {
            nombres: name,
            apellido_paterno: psurname,
            apellido_materno: msurname,
            id_lista: lista,
          };

          const token = sessionStorage.getItem("token");
          console.log(token);

          try {
            const response = await fetch("http://localhost:8000/candidato/", {
              method: "POST",
              headers: {
                "Content-Type": "application/json",
                accept: "application/json",
                Authorization: `Bearer ${token}`, // Agregar el token Bearer
              },
              body: JSON.stringify(data),
            });

            if (response.ok) {
              const responseData = await response.json();
              console.log("Candidato creado:", responseData);
              form.reset();
              alert("Candidato creado exitosamente");
            } else {
              const errorData = await response.json();
              console.error("Error al crear candidato:", errorData);
              alert("Error al crear candidato. Revisa los datos ingresados.");
            }
          } catch (error) {
            console.error("Error al enviar solicitud:", error);
            alert("No se pudo conectar con el servidor. Int√©ntalo m√°s tarde.");
          }
        });
      }
    });
  </script>
</BaseLayout>
